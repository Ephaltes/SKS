/*
 * Parcel Logistics Service
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.20.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

#nullable enable

using System.ComponentModel.DataAnnotations;

using AutoMapper;

using Microsoft.AspNetCore.Mvc;

using NLSL.SKS.Package.BusinessLogic.Entities;
using NLSL.SKS.Package.BusinessLogic.Interfaces;
using NLSL.SKS.Package.Services.Attributes;
using NLSL.SKS.Package.Services.DTOs;

using Swashbuckle.AspNetCore.Annotations;

using Error = NLSL.SKS.Package.Services.DTOs.Error;
using Parcel = NLSL.SKS.Package.BusinessLogic.Entities.Parcel;

namespace NLSL.SKS.Package.Services.Controllers
{
    /// <summary>
    /// </summary>
    [ApiController]
    public class RecipientApiController : ControllerBase
    {
        private readonly IMapper _mapper;

        private readonly IParcelManagement _parcelManagement;
        public RecipientApiController(IParcelManagement parcelManagement, IMapper mapper)
        {
            _parcelManagement = parcelManagement;
            _mapper = mapper;
        }
        /// <summary>
        /// Find the latest state of a parcel by its tracking ID.
        /// </summary>
        /// <param name="trackingId">The tracking ID of the parcel. E.g. PYJRB4HZ6 </param>
        /// <response code="200">Parcel exists, here&#x27;s the tracking information.</response>
        /// <response code="400">The operation failed due to an error.</response>
        /// <response code="404">Parcel does not exist with this tracking ID.</response>
        [HttpGet]
        [Route("/parcel/{trackingId}")]
        [ValidateModelState]
        [SwaggerOperation("TrackParcel")]
        [SwaggerResponse(200, type: typeof(TrackingInformation),
            description: "Parcel exists, here&#x27;s the tracking information.")]
        [SwaggerResponse(400, type: typeof(Error), description: "The operation failed due to an error.")]
        public virtual IActionResult TrackParcel(
            [FromRoute] [Required] [RegularExpression("^[A-Z0-9]{9}$")]
            string trackingId)
        {
            TrackingId trackingIdObject = new TrackingId(trackingId);

            Parcel? trackingParcel = _parcelManagement.Track(trackingIdObject);

            if (trackingParcel is null)
                return new BadRequestObjectResult(
                    new Error { ErrorMessage = "The operation failed due to an error." });

            TrackingInformation? resultParcel = _mapper.Map<Parcel, TrackingInformation>(trackingParcel);

            return new OkObjectResult(resultParcel);

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
        }
    }
}